buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        classpath group: 'org.ajoberstar.grgit', name: 'grgit-gradle', 'version': '4.1.0'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.ajoberstar.grgit'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply from: 'utils/version.gradle'
apply from: 'utils/package-info.gradle'

version = calculateVersion()
println('Mod version: ' + version)
group = 'dev.socketmods.socketnukes'
archivesBaseName = "socketnukes-${mc_version}"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

sourceSets {
    data
    main.resources {
        srcDirs += data.resources.srcDirs
        exclude '.cache/'
    }
}

println('Java: ' + System.getProperty('java.version') +
        ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ')' +
        ' Arch: ' + System.getProperty('os.arch'))

minecraft {
    mappings channel: mappings_channel, version: mappings_version

    runs {
        client {
            workingDirectory project.file('run/client')

            property 'forge.logging.markers', logging_markers
            property 'forge.logging.console.level', logging_console

            ideaModule "${project.name}.main"
            mods {
                socketnukes {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run/server')

            property 'forge.logging.markers', logging_markers
            property 'forge.logging.console.level', logging_console

            ideaModule "${project.name}.main"
            mods {
                socketnukes {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run/data')

            property 'forge.logging.markers', logging_markers
            property 'forge.logging.console.level', logging_console

            args '--mod', 'socketnukes', '--all'
            args '--output', sourceSets.data.resources.srcDirs[0].toString()
            args '--existing', sourceSets.main.resources.srcDirs[0].toString()

            ideaModule "${project.name}.data"
            mods {
                socketnukes {
                    sources sourceSets.main, sourceSets.data
                }
            }
        }
    }
}

configurations {
    dataImplementation.extendsFrom implementation
}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"

    dataImplementation sourceSets.main.output
}

jar {
    finalizedBy 'reobfJar'
    manifest {
        attributes([
                "Specification-Title"     : "socketnukes",
                "Specification-Vendor"    : "socketmods",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : version,
                "Implementation-Vendor"   : "socketmods",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "Git-Commit"              : getCommitHash(),
                "Git-Commit-Timestamp"    : getCommitTimestamp()
        ] as LinkedHashMap)
    }
    includeEmptyDirs false
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        mavenLocal()
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
